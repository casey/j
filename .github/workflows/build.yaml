name: Build

on:
  push:
    branches:
    - master
    tags:
    - '*'
  pull_request:
    branches:
    - master

jobs:
  all:
    name: All

    strategy:
      matrix:
        configuration:
        - os:     ubuntu-latest
          target: x86_64-unknown-linux-musl
          native: true
        - os:     macos-latest
          target: x86_64-apple-darwin
          native: true
        - os:     windows-2016
          target: x86_64-pc-windows-msvc
          native: true
        - os:     ubuntu-latest
          target: aarch64-unknown-linux-gnu
          native: false

    runs-on: ${{matrix.configuration.os}}

    env:
      RUSTFLAGS: "-D warnings"

    steps:
    - uses: actions/checkout@v2

    # An issue with BSD Tar causes sporadic failures on macOS.
    # c.f https://github.com/actions/cache/issues/403
    - name: Install GNU Tar
      if: matrix.configuration.os == 'macos-latest'
      run: |
        brew install gnu-tar
        echo /usr/local/opt/gnu-tar/libexec/gnubin > $GITHUB_PATH

    - name: Cache Cargo
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ matrix.configration.os }}-${{ matrix.configuration.target }} cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Update Ubuntu Packages
      if: matrix.configuration.os == 'ubuntu-latest'
      run: |
        sudo apt-get update

    - name: Install Main Toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.configuration.target }}
        profile: minimal
        components: clippy
        override: true

    - name: Install AArch64 Toolchain
      if: matrix.configuration.target == 'aarch64-unknown-linux-gnu'
      run: sudo apt-get install gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu

    - name: Version
      run: |
        rustup --version
        cargo --version
        cargo clippy --version

    - name: Build
      run: cargo build --all --target ${{ matrix.configuration.target }}

    - name: Test
      if: matrix.configuration.native
      run: cargo test --all --target ${{ matrix.configuration.target }}

    - name: Clippy
      run: cargo clippy --all --all-targets --all-features

    - name: Install Rustfmt Toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        target: ${{ matrix.configuration.target }}
        profile: minimal
        components: rustfmt

    - name: Format
      run: cargo +nightly fmt --all -- --check

    - name: Completion Scripts
      if: matrix.configuration.os != 'windows-2016'
      run: |
        ./bin/generate-completions
        git diff --no-ext-diff --quiet --exit-code

    - name: Check for Forbidden Words
      if: matrix.configuration.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install ripgrep
        ./bin/forbid

    - name: Package
      id: package
      if: startsWith(github.ref, 'refs/tags/')
      run: ./bin/package ${{github.ref}} ${{matrix.configuration.os}} ${{ matrix.configuration.target }}
      shell: bash

    - name: Publish
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        draft: false
        files: ${{ steps.package.outputs.archive }}
        prerelease: ${{ ! startsWith(github.ref, 'refs/tags/v') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
